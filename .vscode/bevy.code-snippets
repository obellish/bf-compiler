{
    "Query Param": {
        "scope": "rust",
        "prefix": "query",
        "body": "${1:query}: Query<${0}>",
    },
    "Mutable Query Param": {
        "scope": "rust",
        "prefix": "query mut",
        "body": "mut ${1:query}: Query<${0}>",
    },
    "Commands Param": {
        "scope": "rust",
        "prefix": "commands",
        "body": "mut ${0:commands}: Commands",
    },
    "Res Param": {
        "scope": "rust",
        "prefix": "res",
        "body": "${1:res}: Res<${0}>",
    },
    "ResMut Param": {
        "scope": "rust",
        "prefix": "res mut",
        "body": "mut ${1:res}: ResMut<${0}>",
    },
    "EventWriter Param": {
        "scope": "rust",
        "prefix": "event writer",
        "body": "mut ${1:events}: EventWriter<${0}>",
    },
    "EventReader Param": {
        "scope": "rust",
        "prefix": "event reader",
        "body": "mut ${1:events}: EventReader<${0}>",
    },
    "Local Param": {
        "scope": "rust",
        "prefix": "local",
        "body": "mut ${1:local}: Local<${0}>",
    },
    "Exclusive System Template": {
        "scope": "rust",
        "prefix": "exclusive system",
        "description": "Exclusive systems run on the main thread and have mutable (exclusive) access to the ECS world.",
        "body": [
            "fn ${1}(world: &mut World) {",
            "\t${0}",
            "}"
        ]
    },
    "App Template": {
        "scope": "rust",
        "prefix": "app",
        "body": [
            "use bevy::prelude::*;",
            "",
            "fn main() {",
            "   App::new()",
            "       .add_plugins(DefaultPlugins)${0}",
            "       .run();",
            "}",
        ]
    },
    "Plugin Template": {
        "scope": "rust",
        "prefix": "plugin",
        "body": [
            "pub struct ${1};",
            "",
            "impl Plugin for ${1} {",
            "\tfn build(&self, app: &mut App) {",
            "\t\t${0}",
            "\t}",
            "}",
        ]
    },
    "Component Struct": {
        "scope": "rust",
        "prefix": "component",
        "body": [
            "#[derive(Component)]",
            "struct ${0}",
        ],
    },
    "Resource Struct": {
        "scope": "rust",
        "prefix": "resource",
        "body": [
            "#[derive(Resource)]",
            "struct ${0}",
        ],
    },
    "Bundle Struct": {
        "scope": "rust",
        "prefix": "bundle",
        "body": [
            "#[derive(Bundle)]",
            "struct ${1} {",
            "\t${0}",
            "}",
        ]
    }
}